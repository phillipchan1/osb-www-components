'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _JSXComponent = require('./JSXComponent');

var _JSXComponent2 = _interopRequireDefault(_JSXComponent);

var _metalState = require('metal-state');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * JSXComponent that renders html passed in.
 * @class
 */
var DangerouslySetHTML = function (_Component) {
	_inherits(DangerouslySetHTML, _Component);

	function DangerouslySetHTML() {
		_classCallCheck(this, DangerouslySetHTML);

		return _possibleConstructorReturn(this, (DangerouslySetHTML.__proto__ || Object.getPrototypeOf(DangerouslySetHTML)).apply(this, arguments));
	}

	_createClass(DangerouslySetHTML, [{
		key: 'render',

		/**
   * @return {Component}
   */
		value: function render() {
			var _props = this.props,
			    content = _props.content,
			    tag = _props.tag;


			IncrementalDOM.elementOpen(tag, null, null);

			var node = IncrementalDOM.elementClose(tag);

			node.innerHTML = content;

			return node;
		}
	}]);

	return DangerouslySetHTML;
}(_JSXComponent2.default);

DangerouslySetHTML.PROPS = {
	content: _metalState.Config.string(),
	tag: _metalState.Config.string().value('span')
};

exports.default = DangerouslySetHTML;